var search_data = {"index":{"searchIndex":["reset","add()","difference()","include?()","intersection()","new()","size()","subset()","to_a()","union()","history","manifest","readme","rakefile"],"longSearchIndex":["reset","reset#add()","reset#difference()","reset#include?()","reset#intersection()","reset::new()","reset#size()","reset#subset()","reset#to_a()","reset#union()","","","",""],"info":[["Reset","","Reset.html","","<p>This class is yet another implementation of the abstract data type Set It stores values without any particular …\n"],["add","Reset","Reset.html#method-i-add","(element)","<p>Adds a new element to the reset. If the element is already included, it ignores it.\n"],["difference","Reset","Reset.html#method-i-difference","(reset)","<p>Returns a new Set of all members of the first set that are not part of the second set.\n"],["include?","Reset","Reset.html#method-i-include-3F","(element)","<p>Tests if the reset contains the given element\n"],["intersection","Reset","Reset.html#method-i-intersection","(reset)","<p>Returns a new Set of all objects that are members of both sets.\n"],["new","Reset","Reset.html#method-c-new","(list=[])","<p>Creates a new Reset using a <code>list</code> of elements.\n<p>It receives any enumerable that can be transformed into …\n"],["size","Reset","Reset.html#method-i-size","()","<p>Returns the size of the reset\n"],["subset","Reset","Reset.html#method-i-subset","(reset)","<p>Tests whether the first set is a subset of the second set.\n"],["to_a","Reset","Reset.html#method-i-to_a","()","<p>Convert a reset to array\n"],["union","Reset","Reset.html#method-i-union","(reset)","<p>Returns a new Reset containing the unique members of self and the reset sent as parameter.\n"],["History","","History_txt.html","","<p>1.0.0 / 2013-09-12\n<p>Created!\n\n"],["Manifest","","Manifest_txt.html","","<p>.autotest History.txt Manifest.txt README.txt Rakefile lib/reset.rb test/test_reset.rb\n"],["README","","README_md.html","","<p>Reset\n<p>This class is an implementation of the Set abstract data type that can store unique values, without …\n"],["Rakefile","","Rakefile.html","","<p>require “rubygems” require “hoe”\n<p>Hoe.plugin :minitest\n<p>Hoe.spec “reset” do …\n"]]}}